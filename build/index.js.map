{"version":3,"file":"index.js","mappings":"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","sources":["webpack://block-editor-governance/./src/block-locking.jsx","webpack://block-editor-governance/./src/block-utils.js","webpack://block-editor-governance/./src/nested-governance-loader.js","webpack://block-editor-governance/external window \"lodash\"","webpack://block-editor-governance/external window [\"wp\",\"blockEditor\"]","webpack://block-editor-governance/external window [\"wp\",\"components\"]","webpack://block-editor-governance/external window [\"wp\",\"compose\"]","webpack://block-editor-governance/external window [\"wp\",\"data\"]","webpack://block-editor-governance/external window [\"wp\",\"element\"]","webpack://block-editor-governance/external window [\"wp\",\"hooks\"]","webpack://block-editor-governance/external window [\"wp\",\"i18n\"]","webpack://block-editor-governance/external window [\"wp\",\"notices\"]","webpack://block-editor-governance/webpack/bootstrap","webpack://block-editor-governance/webpack/runtime/compat get default export","webpack://block-editor-governance/webpack/runtime/define property getters","webpack://block-editor-governance/webpack/runtime/hasOwnProperty shorthand","webpack://block-editor-governance/webpack/runtime/make namespace object","webpack://block-editor-governance/./src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Disabled } from '@wordpress/components';\nimport { addFilter, applyFilters } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { isBlockAllowedInHierarchy } from './block-utils';\n\nexport function setupBlockLocking( governanceRules ) {\n\tconst withDisabledBlocks = createHigherOrderComponent( BlockEdit => {\n\t\treturn props => {\n\t\t\tconst { name: blockName, clientId } = props;\n\n\t\t\tconst { getBlockParents, getBlockName } = select( blockEditorStore );\n\t\t\tconst parentClientIds = getBlockParents(clientId, true);\n\n\t\t\tconst isParentLocked = parentClientIds.some( parentClientId => isBlockLocked(parentClientId) );\n\n\t\t\tif ( isParentLocked ) {\n\t\t\t\t// To avoid layout issues, only disable the outermost locked block\n\t\t\t\treturn <BlockEdit { ...props } />;\n\t\t\t}\n\n\t\t\tconst parentBlockNames = parentClientIds.map( parentClientId =>\n\t\t\t\tgetBlockName( parentClientId )\n\t\t\t);\n\n\t\t\tlet isAllowed = isBlockAllowedInHierarchy( blockName, parentBlockNames, governanceRules );\n\n\t\t\t/**\n\t\t\t * Change what blocks are allowed to be edited in the block editor.\n\t\t\t *\n\t\t\t * @param {bool}     isAllowed        Whether or not the block will be allowed.\n\t\t\t * @param {string}   blockName        The name of the block to be edited.\n\t\t\t * @param {string[]} parentBlockNames An array of zero or more parent block names,\n\t\t\t *                                    starting with the most recent parent ancestor.\n\t\t\t * @param {Object}   governanceRules  An object containing the full set of governance\n\t\t\t *                                    rules for the current user.\n\t\t\t */\n\t\t\tisAllowed = applyFilters(\n\t\t\t\t'vip_governance__is_block_allowed_for_editing',\n\t\t\t\tisAllowed,\n\t\t\t\tblockName,\n\t\t\t\tparentBlockNames,\n\t\t\t\tgovernanceRules\n\t\t\t);\n\n\t\t\tif ( isAllowed ) {\n\t\t\t\treturn <BlockEdit { ...props } />;\n\t\t\t} else {\n\t\t\t\t// Mark block as locked so that children can detect they're within an existing locked block\n\t\t\t\tsetBlockLocked( clientId );\n\n\t\t\t\treturn <>\n\t\t\t\t\t<Disabled>\n\t\t\t\t\t\t<div style={ { opacity: 0.6, 'background-color': '#eee', border: '2px dashed #999' } }>\n\t\t\t\t\t\t\t<BlockEdit { ...props } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Disabled>\n\t\t\t\t</>;\n\t\t\t}\n\t\t};\n\t}, 'withDisabledBlocks' );\n\n\taddFilter( 'editor.BlockEdit', 'wpcomvip-governance/with-disabled-blocks', withDisabledBlocks );\n}\n\n/**\n * In-memory map of block clientIds that have been marked as locked.\n *\n * This replaces using props.setAttributes() to set lock status, as this caused an\n * \"unsaved changes\" warning to appear in the editor when block locking was in use.\n */\nconst lockedBlockMap = {};\n\n/**\n * Marks a block as locked via the block's clientId.\n *\n * @param {string} clientId Block clientId in editor\n * @returns {void}\n */\nfunction setBlockLocked( clientId ) {\n\tlockedBlockMap[clientId] = true;\n}\n\n/**\n * Returns true if a block has previously been marked as locked, false otherwise.\n *\n * @param {string} clientId Block clientId in editor\n * @returns {boolean}\n */\nfunction isBlockLocked( clientId ) {\n\treturn clientId in lockedBlockMap;\n}\n","import { applyFilters } from '@wordpress/hooks';\nimport { getNestedSetting } from './nested-governance-loader';\n\n// The list of default core blocks that should be allowed to be inserted, in order to make life easier.\nconst DEFAULT_CORE_BLOCK_LIST = {\n\t'core/list': [ 'core/list-item' ],\n\t'core/columns': [ 'core/column' ],\n\t'core/page-list': [ 'core/page-list-item' ],\n\t'core/navigation': [ 'core/navigation-link', 'core/navigation-submenu' ],\n};\n\n/**\n * Given a block name, a parent list and a set of governance rules, determine if\n * the block can be inserted.\n *\n * By default, will return if the block is allowed to be inserted at the root level\n * per the user's rules. If a parent block contains a rule for allowedBlocks,\n * the function will return if the block is allowed as a child of that parent.\n *\n * Rules declared in allowedBlocks will override root level rules when the block\n * is currently a child of the parent with allowedBlocks.\n *\n * @param {string}   blockName        The current block's name.\n * @param {string[]} parentBlockNames A list of zero or more parent block names,\n *                                    starting with the most recent parent ancestor.\n * @param {Object}   governanceRules  An object containing the full set of governance\n *                                    rules for the current user.\n * @returns True if the block is allowed in set of parent blocks, or false otherwise.\n */\nexport function isBlockAllowedInHierarchy( blockName, parentBlockNames, governanceRules ) {\n\t// Filter to decide if the mode should be cascading or restrictive, where true is cascading and false is restrictive.\n\tconst isInCascadingMode = applyFilters(\n\t\t'vip_governance__is_block_allowed_in_hierarchy',\n\t\tfalse,\n\t\tblockName,\n\t\tparentBlockNames,\n\t\tgovernanceRules\n\t);\n\n\t// Build the blocks that are allowed using the root level blocks for cascading mode or if no parent has been past, or empty otherwise.\n\tconst blocksAllowedToBeInserted =\n\t\tisInCascadingMode || parentBlockNames.length === 0 ? [ ...governanceRules.allowedBlocks ] : [];\n\n\t// Only execute this if we know we have blockSettings to check against.\n\tif ( governanceRules.blockSettings && parentBlockNames.length > 0 ) {\n\t\t// Shortcircuit the parent-child hierarchy for some core blocks\n\t\tif (\n\t\t\tDEFAULT_CORE_BLOCK_LIST[ parentBlockNames[ 0 ] ] &&\n\t\t\tDEFAULT_CORE_BLOCK_LIST[ parentBlockNames[ 0 ] ].includes( blockName )\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Get the child block's parent block settings at whatever depth its located at.\n\t\tconst nestedSetting = getNestedSetting(\n\t\t\tparentBlockNames.reverse(),\n\t\t\t'allowedBlocks',\n\t\t\tgovernanceRules.blockSettings\n\t\t);\n\n\t\t// If we found the allowedBlocks for the parent block, add that to the array of blocks that can be inserted.\n\t\tif ( nestedSetting && nestedSetting.value ) {\n\t\t\tblocksAllowedToBeInserted.push( ...nestedSetting.value );\n\t\t}\n\t}\n\n\t// Check if the block is allowed using the array of blocks that can be inserted.\n\treturn isBlockAllowedByBlockRegexes( blockName, blocksAllowedToBeInserted );\n}\n\n/**\n * Matches a block name to a list of block regex rules.\n * For regex rules, see doesBlockNameMatchBlockRegex().\n *\n * @param {string} blockName\n * @param {string[]} rules\n * @returns True if the block name matches any of the rules, false otherwise.\n */\nexport function isBlockAllowedByBlockRegexes( blockName, rules ) {\n\treturn rules.some( rule => doesBlockNameMatchBlockRegex( blockName, rule ) );\n}\n\n/**\n * Matches a rule to a block name, with the following cases being possible:\n *\n * 1. ['*'] - matches all blocks\n * 2. '*' can be located somewhere else alongside a string, e.g. 'core/*' - matches all core blocks\n * 3. ['core/paragraph'] - matches only the core/paragraph block\n *\n * @param {string} blockName\n * @param {string} rule\n * @returns True if the block name matches the rule, or false otherwise\n */\nexport function doesBlockNameMatchBlockRegex( blockName, rule ) {\n\tif ( rule.includes( '*' ) ) {\n\t\t// eslint-disable-next-line security/detect-non-literal-regexp\n\t\treturn blockName.match( new RegExp( rule.replace( '*', '.*' ) ) );\n\t}\n\n\treturn rule === blockName;\n}\n","import { get } from 'lodash';\n\nexport const getNestedSettingPaths = (\n\tnestedSettings,\n\tnestedMetadata = {},\n\tcurrentBlock = false\n) => {\n\tconst SETTINGS_TO_SKIP = [ 'allowedBlocks' ];\n\tfor ( const [ settingKey, settingValue ] of Object.entries( nestedSettings ) ) {\n\t\tif ( SETTINGS_TO_SKIP.includes( settingKey ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isNestedBlock = settingKey.includes( '/' );\n\n\t\tif ( isNestedBlock ) {\n\t\t\t// This setting contains another block, look at the child for metadata\n\t\t\tObject.entries( nestedSettings ).forEach( ( [ blockName, blockNestedSettings ] ) => {\n\t\t\t\tif ( ! SETTINGS_TO_SKIP.includes( blockName ) ) {\n\t\t\t\t\tgetNestedSettingPaths( blockNestedSettings, nestedMetadata, blockName );\n\t\t\t\t}\n\t\t\t} );\n\t\t} else if ( currentBlock !== false ) {\n\t\t\t// This is a leaf block, add setting paths to nestedMetadata\n\t\t\tconst settingPaths = flattenSettingPaths( settingValue, `${ settingKey }.` );\n\n\t\t\t// eslint-disable-next-line security/detect-object-injection\n\t\t\tnestedMetadata[ currentBlock ] = {\n\t\t\t\t// eslint-disable-next-line security/detect-object-injection\n\t\t\t\t...( nestedMetadata[ currentBlock ] ?? {} ),\n\t\t\t\t...settingPaths,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn nestedMetadata;\n};\n\n/**\n * Find block settings nested in other block settings.\n *\n * Given an array of blocks names from the top level of the editor to the\n * current block (`blockNamePath`), return the value for the deepest-nested\n * settings value that applies to the current block.\n *\n * If two setting values share the same nesting depth, use the last one that\n * occurs in settings (like CSS).\n *\n * @param {string[]} blockNamePath  Block names representing the path to the\n *                                  current block from the top level of the\n *                                  block editor.\n * @param {string}   normalizedPath Path to the setting being retrieved.\n * @param {Object}   settings       Object containing all block settings.\n * @param {Object}   result         Optional. Object with keys `depth` and\n *                                  `value` used to track current most-nested\n *                                  setting.\n * @param {number}   depth          Optional. The current recursion depth used\n *                                  to calculate the most-nested setting.\n * @return {Object}                 Object with keys `depth` and `value`.\n *                                  Destructure the `value` key for the result.\n */\nexport const getNestedSetting = (\n\tblockNamePath,\n\tnormalizedPath,\n\tsettings,\n\tresult = { depth: 0, value: undefined },\n\tdepth = 1\n) => {\n\tconst [ currentBlockName, ...remainingBlockNames ] = blockNamePath;\n\t// eslint-disable-next-line security/detect-object-injection\n\tconst blockSettings = settings[ currentBlockName ];\n\n\tif ( remainingBlockNames.length === 0 ) {\n\t\tconst settingValue = get( blockSettings, normalizedPath );\n\n\t\tif ( settingValue !== undefined && depth >= result.depth ) {\n\t\t\tresult.depth = depth;\n\t\t\tresult.value = settingValue;\n\t\t}\n\n\t\treturn result;\n\t} else if ( blockSettings !== undefined ) {\n\t\t// Recurse into the parent block's settings\n\t\tresult = getNestedSetting(\n\t\t\tremainingBlockNames,\n\t\t\tnormalizedPath,\n\t\t\tblockSettings,\n\t\t\tresult,\n\t\t\tdepth + 1\n\t\t);\n\t}\n\n\t// Continue down the array of blocks\n\treturn getNestedSetting( remainingBlockNames, normalizedPath, settings, result, depth );\n};\n\nfunction flattenSettingPaths( settings, prefix = '' ) {\n\tconst result = {};\n\n\tObject.entries( settings ).forEach( ( [ key, value ] ) => {\n\t\tconst isRegularObject = typeof value === 'object' && !! value && ! Array.isArray( value );\n\n\t\tif ( isRegularObject ) {\n\t\t\tresult[ `${ prefix }${ key }` ] = true;\n\t\t\tObject.assign( result, flattenSettingPaths( value, `${ prefix }${ key }.` ) );\n\t\t} else {\n\t\t\tresult[ `${ prefix }${ key }` ] = true;\n\t\t}\n\t} );\n\n\treturn result;\n}\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addFilter, applyFilters } from '@wordpress/hooks';\nimport { select, dispatch } from '@wordpress/data';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as noticeStore } from '@wordpress/notices';\nimport { __ } from '@wordpress/i18n';\n\nimport { getNestedSettingPaths, getNestedSetting } from './nested-governance-loader';\nimport { setupBlockLocking } from './block-locking';\nimport { isBlockAllowedInHierarchy } from './block-utils';\n\nfunction setup() {\n\tif ( VIP_GOVERNANCE.error ) {\n\t\tdispatch( noticeStore ).createErrorNotice( VIP_GOVERNANCE.error, {\n\t\t\tid: 'wpcomvip-governance-error',\n\t\t\tisDismissible: true,\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __( 'Open governance settings' ),\n\t\t\t\t\turl: VIP_GOVERNANCE.urlSettingsPage,\n\t\t\t\t},\n\t\t\t],\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tconst governanceRules = VIP_GOVERNANCE.governanceRules;\n\n\taddFilter(\n\t\t'blockEditor.__unstableCanInsertBlockType',\n\t\t`wpcomvip-governance/block-insertion`,\n\t\t( canInsert, blockType, rootClientId, { getBlock } ) => {\n\t\t\tif ( canInsert === false ) {\n\t\t\t\treturn canInsert;\n\t\t\t}\n\n\t\t\tlet parentBlockNames = [];\n\n\t\t\tif ( rootClientId ) {\n\t\t\t\t// This block has parents. Build a list of parentBlockNames\n\t\t\t\tconst { getBlockParents, getBlockName } = select( blockEditorStore );\n\t\t\t\tconst parentBlock = getBlock( rootClientId );\n\t\t\t\tconst ancestorClientIds = getBlockParents( rootClientId, true );\n\n\t\t\t\tparentBlockNames = [ parentBlock.clientId, ...ancestorClientIds ].map( parentClientId =>\n\t\t\t\t\tgetBlockName( parentClientId )\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst isAllowed = isBlockAllowedInHierarchy(\n\t\t\t\tblockType.name,\n\t\t\t\tparentBlockNames,\n\t\t\t\tgovernanceRules\n\t\t\t);\n\n\t\t\t/**\n\t\t\t * Change what blocks are allowed to be inserted in the block editor.\n\t\t\t *\n\t\t\t * @param {bool}     isAllowed        Whether or not the block will be allowed.\n\t\t\t * @param {string}   blockName        The name of the block to be inserted.\n\t\t\t * @param {string[]} parentBlockNames An array of zero or more parent block names,\n\t\t\t *                                    starting with the most recent parent ancestor.\n\t\t\t * @param {Object}   governanceRules  An object containing the full set of governance\n\t\t\t *                                    rules for the current user.\n\t\t\t */\n\t\t\treturn applyFilters(\n\t\t\t\t'vip_governance__is_block_allowed_for_insertion',\n\t\t\t\tisAllowed,\n\t\t\t\tblockType.name,\n\t\t\t\tparentBlockNames,\n\t\t\t\tgovernanceRules\n\t\t\t);\n\t\t}\n\t);\n\n\tconst nestedSettings = VIP_GOVERNANCE.nestedSettings;\n\tconst nestedSettingPaths = getNestedSettingPaths( nestedSettings );\n\n\taddFilter(\n\t\t'blockEditor.useSetting.before',\n\t\t`wpcomvip-governance/nested-block-settings`,\n\t\t( result, path, clientId, blockName ) => {\n\t\t\tconst hasCustomSetting =\n\t\t\t\t// eslint-disable-next-line security/detect-object-injection\n\t\t\t\tnestedSettingPaths[ blockName ] !== undefined &&\n\t\t\t\t// eslint-disable-next-line security/detect-object-injection\n\t\t\t\tnestedSettingPaths[ blockName ][ path ] === true;\n\n\t\t\tif ( ! hasCustomSetting ) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tconst blockNamePath = [\n\t\t\t\tclientId,\n\t\t\t\t...select( blockEditorStore ).getBlockParents( clientId, /* ascending */ true ),\n\t\t\t]\n\t\t\t\t.map( candidateId => select( blockEditorStore ).getBlockName( candidateId ) )\n\t\t\t\t.reverse();\n\n\t\t\t( { value: result } = getNestedSetting( blockNamePath, path, nestedSettings ) );\n\n\t\t\treturn result.theme ? result.theme : result;\n\t\t}\n\t);\n\n\t// Block locking\n\tif ( governanceRules?.allowedBlocks ) {\n\t\tsetupBlockLocking( governanceRules );\n\t}\n}\n\nsetup();\n"],"names":["Disabled","addFilter","applyFilters","createHigherOrderComponent","store","blockEditorStore","select","isBlockAllowedInHierarchy","setupBlockLocking","governanceRules","withDisabledBlocks","BlockEdit","props","name","blockName","clientId","getBlockParents","getBlockName","parentClientIds","isParentLocked","some","parentClientId","isBlockLocked","createElement","parentBlockNames","map","isAllowed","setBlockLocked","Fragment","style","opacity","border","lockedBlockMap","getNestedSetting","DEFAULT_CORE_BLOCK_LIST","isInCascadingMode","blocksAllowedToBeInserted","length","allowedBlocks","blockSettings","includes","nestedSetting","reverse","value","push","isBlockAllowedByBlockRegexes","rules","rule","doesBlockNameMatchBlockRegex","match","RegExp","replace","get","getNestedSettingPaths","nestedSettings","nestedMetadata","arguments","undefined","currentBlock","SETTINGS_TO_SKIP","settingKey","settingValue","Object","entries","isNestedBlock","forEach","_ref","blockNestedSettings","_nestedMetadata$curre","settingPaths","flattenSettingPaths","blockNamePath","normalizedPath","settings","result","depth","currentBlockName","remainingBlockNames","prefix","_ref2","key","isRegularObject","Array","isArray","assign","dispatch","noticeStore","__","setup","VIP_GOVERNANCE","error","createErrorNotice","id","isDismissible","actions","label","url","urlSettingsPage","canInsert","blockType","rootClientId","getBlock","parentBlock","ancestorClientIds","nestedSettingPaths","path","hasCustomSetting","candidateId","theme"],"sourceRoot":""}